- title t('.title')
- description t('.description')

.section.section-page
  .container
    header
      h1 = t('.title')

    .row
      .col-xs-12.col-sm-5.col-sm-offset-1
        = render 'form'
      .col-xs-12.faq.col-sm-6
        h2 Je suis un newbie, et j'ai peeeeuuur de présenter
        p À Paris.rb on n'est pas là pour se moquer des novices. Nous serons TOUJOURS ravis d'accueillir les talks débutants comme confirmés.

        h2 Je voudrais faire une présentation de + de 20 minutes

        p Les présentations sont chronometrées, dans le but de ne pas trop fatiguer les rubyistes qui vous écoutent, et des études ont prouvé que les 2 meilleurs timings sont : 5 minutes et 20 minutes.

        h2 Je veux présenter ma société, ou mon produit

        p Nous sommes ici pour parler de Ruby, de Rails, et du monde des startups sur Paris. Pour faire la promotion d'une société, d'un produit, ou rechercher un profil, la coutume est d'aider la communauté en sponsorisant les événements Ruby.

        p == "Si vous avez d'autres questions, n'hésitez pas à envoyer un email à #{mail_to('thibaut@milesrock.com', 'Thibaut')}"

.section.talks
  .container
    h2 = t('.lineup')

    .hidden-xs
      table.talks-list.table.table-striped
        thead
          tr
            th = Talk.human_attribute_name(:title)
            th = Talk.human_attribute_name(:speaker_name)
            th = Talk.human_attribute_name(:speaker_twitter)
            th = Talk.human_attribute_name(:level)
            th = Talk.human_attribute_name(:duration)
            th = Talk.human_attribute_name(:preferred_month_talk)
            th = Talk.human_attribute_name(:time_position)
        tbody
          - lineup_talks.each do |talk|
            tr
              td = talk.title
              td = talk.speaker_name
              td = talk.speaker_twitter
              td = talk.level_text
              td = talk.duration_text
              td = talk.preferred_month_talk
              td = talk.time_position

    .visible-xs
      ul.talks-list.list-unstyled
        = content_tag_for :li, lineup_talks do |talk|
          span.title = talk.title
          | #{talk.speaker_name} - #{talk.level_text} - #{talk.duration_text}

    / h2 = t('.proposed_talks')
    /
    / .hidden-xs
    /   table.talks-list.table.table-striped
    /     thead
    /       tr
    /         th = Talk.human_attribute_name(:title)
    /         th = Talk.human_attribute_name(:speaker_name)
    /         th = Talk.human_attribute_name(:level)
    /         th = Talk.human_attribute_name(:duration)
    /     tbody
    /       - proposed_talks.each do |talk|
    /         tr
    /           td = talk.title
    /           td = talk.speaker_name
    /           td = talk.level_text
    /           td = talk.duration_text
    /
    / .visible-xs
    /   ul.talks-list.list-unstyled
    /     = content_tag_for :li, proposed_talks do |talk|
    /       span.title = talk.title
    /       | #{talk.speaker_name} - #{talk.level_text} - #{talk.duration_text}

    h2 = t('.happened_talks')

    .hidden-xs
      table.talks-list.table.table-striped
        thead
          tr
            th = Talk.human_attribute_name(:title)
            th = Talk.human_attribute_name(:speaker_name)
            th = Talk.human_attribute_name(:level)
            th = Talk.human_attribute_name(:duration)
            th = t('.resources')
        tbody
          - happened_talks.each do |talk|
            tr
              td = talk.title
              td = talk.speaker_name
              td = talk.level_text
              td = talk.duration_text
              td
                - if talk.slides?
                  => link_to t('.slides'), talk.slides, rel: 'nofollow'
                - if talk.video_url?
                  => link_to t('.video'), talk.video_url

    .visible-xs
      ul.talks-list.list-unstyled
        = content_tag_for :li, happened_talks do |talk|
          span.title = talk.title
          | #{talk.speaker_name} - #{talk.level_text} - #{talk.duration_text}
          - if talk.slides? || talk.video_url?
            span.resources
              - if talk.slides?
                => link_to t('.slides'), talk.slides
              - if talk.video_url?
                = link_to t('.video'), talk.video_url, rel: 'nofollow'
